# -*- coding: utf-8 -*-
"""IR_A2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W4C-0d2ZaX98J7ZJkovMBMUY-eQAq6n0
"""

from numpy import *
import numpy.linalg as la
import time

file = open('input.txt','r')
lines =file.readlines()

#start time
start = time.time()

n=(int)((lines[0].split('\n'))[0])
edges=(int)((lines[1].split('\n'))[0])
adj= zeros((n,n))
cnt=0
for line in lines:
  if cnt<2:
    cnt+=1
    continue
  temp = ((line.split('\n'))[0]).split(',')
  a = (int)(temp[0])
  b=(int)(temp[1])
  print(a,b)
  adj[a][b]=1
  


tele_withoutrandom =zeros((n,n))
outgoing = {}
# for i in range(0,edges):
#   # a = (input().split())
#   adj[(int)(a[0]) -1][(int)(a[1]) -1]=1
#   #outgoing[(int)(a[0]) -1] += 1
# # print(adj)
def get_telem_withoutrandom(adj,tele_withoutrandom):
  for i in range(0,n):
    # print(adj)
    count=0
    for j in range(0,n):
      if adj[i][j]==1:
        count=count+1
        # print(count)
    for k in range(0,n):
      if count==0:
        break
      tele_withoutrandom[i][k]=adj[i][k]/count
  return tele_withoutrandom
#for i in range(0,n):
  #for j in range(0,n):
#alpha =0
print(get_telem_withoutrandom(adj,tele_withoutrandom))

def getTeleMatrix(A,m):
  n = A.shape[1]
  S = ones((n,n))/n
  return (1-m)*A+m*S

def printpages(eig):
  print("Page Ranks")
  temp=[]
  idx=1
  for x in eig:
    temp.append((x,idx))
    idx +=1
  temp.sort()
  temp.reverse()
  for x in temp:
    print(str(x[1]) + " ")

def get_lefteigen(tele_withoutrandom):
  mat=tele_withoutrandom.transpose()
  eVals, eVecs = la.eig(mat) # Gets the eigenvalues and vectors
  order = absolute(eVals).argsort()[::-1] # Orders them by their eigenvalues
  eVals = eVals[order]
  eVecs = eVecs[:,order]
  r = eVecs[:, 0] # Sets r to be the principal eigenvector
  for i in range(0,r.shape[0]):
    r[i]= abs(r[i])
  r= real((r ) / (sum(r)))
  print("Eigen Values")
  print(r)
  printpages(r)

"""POWER ITERATION METHOD"""

def power_itr(tele_withoutrandom):
  mat=tele_withoutrandom.transpose()
  r =  ones(mat.shape[0]) / (mat.shape[0]) # Sets up this vector (6 entries of 1/6 Ã— 100 each)
  lastR = r
  r = mat @ r
  while la.norm(lastR - r) > 0.000000001 :
      lastR = r
      r = mat @ r
  print("Eigen Values")
  print(r)
  printpages(r)

tele_withoutrandom

"""WITHOUT RANDOM TELEPORTATION"""

# Finding the eigen values using linear algebra
get_lefteigen(tele_withoutrandom)

# Finding the eigen values using power iteration method
power_itr(tele_withoutrandom)

"""WITH RANDOM TELEPORTATION"""

damping_factor = 0.1
getTeleMatrix(tele_withoutrandom,damping_factor)

# Finding the eigen values using linear algebra
get_lefteigen(getTeleMatrix(tele_withoutrandom,damping_factor))

damping_factor = 0.1
getTeleMatrix(tele_withoutrandom,damping_factor)

# Finding the eigen values using power iteration method
power_itr(getTeleMatrix(tele_withoutrandom,damping_factor))

#end time
end = time.time();
print("Execution time : " , end - start , "sec")

